name: Build APK With EAS

on:
  workflow_dispatch:
    inputs:
      name:
        description: "Manual Trigger Github Action"
        default: "Manual"
  push:
    branches: ["main", "releases/**", "FT-**"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  # call_prepare_workflow:
  #   uses: ./.github/workflows/prepare-reusable.yml

  pre-check:
    # needs: [call_prepare_workflow]
    runs-on: ubuntu-latest

    steps:
      - name: Reusable Workflow Prepare
        uses: ./.github/workflows/prepare-reusable.yml

      # - name: Checkout the code
      #   uses: actions/checkout@v4

      # - name: 🏗 Setup Node
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: 22.x
      #     cache: yarn

      # - name: 📦 Install dependencies
      #   run: yarn install --frozen-lockfile

      - name: Pre-Check Typescript, Lint And Prettier
        run: |
          yarn tsc
          yarn lint
          yarn pretty

  # build:
  #   # needs: [pre-check]
  #   runs-on: ubuntu-latest
  #   env:
  #     JAVA_TOOL_OPTIONS: "-Xmx6g" # Increase this to Xmx4g - 4GB, adjust as needed

  #   steps:
  #     - name: Checkout the code
  #       uses: actions/checkout@v4

  #     - name: Setup Node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20.x
  #         cache: yarn

  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: "17"
  #         distribution: "temurin"

  #     - name: Setup Android SDK Tool
  #       uses: android-actions/setup-android@v3
  #       # with:
  #       # sdk-version: "30.0.3"  # Adjust this based on your project

  #     - name: Install CMake and NDK
  #       run: |
  #         sdkmanager "cmake;3.30.3"  # Installing CMake 3.10.2
  #         sdkmanager "ndk;27.1.12297006"  # Installing NDK 21, known to be stable with Expo

  #     - name: Setup Expo and EAS
  #       uses: expo/expo-github-action@v8
  #       with:
  #         expo-version: latest
  #         eas-version: latest
  #         token: ${{ secrets.EXPO_TOKEN }}

  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile

  #     - name: Prebuild Android
  #       run: yarn expo prebuild --no-install --platform android

  #     - name: Clean Gradle Cache
  #       run: cd android && ./gradlew clean

  #     - name: Refresh dependencies
  #       run: cd android && ./gradlew --refresh-dependencies

  #     - name: Set Gradle Memory Options
  #       run: echo "org.gradle.jvmargs=-Xmx6g -XX:MaxMetaspaceSize=512m" >> ./android/gradle.properties

  #     - name: Build Android App
  #       run: eas build --platform android --profile development --local --non-interactive --clear-cache --output ${{ github.workspace }}/app-release.apk

  #     - name: Upload A Android Build Artifact
  #       uses: actions/upload-artifact@v4
  #       id: artifact-upload-step
  #       with:
  #         name: app-development
  #         retention-days: 14
  #         path: ${{ github.workspace }}/app-release.apk

  # - name: Send mail
  #   if: always()
  #   uses: dawidd6/action-send-mail@v3
  #   with:
  #     server_address: smtp.gmail.com
  #     server_port: 465
  #     secure: true
  #     username: ${{secrets.MAIL_USERNAME}}
  #     password: ${{secrets.MAIL_PASSWORD}}
  #     subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
  #     to: timsina.regan@gmail.com
  #     from: Developer
  #     body: ${{ github.job }} job in workflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }} APK URL -> ${{ steps.artifact-upload-step.outputs.artifact-url }}
  #     ignore_cert: true
  #     convert_markdown: true
  #     attachments: attachments.zip,git.diff,./dist/static/*.js
  #     priority: low
