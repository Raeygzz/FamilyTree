name: Build APK With EAS - 2

on:
  workflow_dispatch:
    inputs:
      # name:
      #   description: "Manual Trigger Github Action"
      #   default: "Manual"
      os:
        type: choice
        description: OS to build on. Ubuntu is faster, MacOS supports iOS builds
        options:
          - ubuntu-latest
          - macos-latest

      platform:
        type: choice
        description: Platform to build for
        options:
          - android
          - ios

      profile:
        type: choice
        description: Build profile to use
        options:
          - development
          - preview
          - production

      should_submit:
        type: boolean
        description: Whether to perform the submit step
        required: true
        default: false
  # create:
  push:
    branches: ["main", "releases/**", "new-features"]
  pull_request:
    branches: ["main"]

env:
  hasAuth: ${{ !!secrets.EXPO_TOKEN }}
  BASE_URL: "https://supabase.com/"
  BUILD_ARTIFACT_NAME: app-${{ github.event.inputs.profile || 'development' }}

permissions:
  contents: read

jobs:
  # pre-check:
  #   runs-on: ${{ github.event.inputs.os || 'ubuntu-latest' }}
  #   # strategy:
  #   #   matrix:
  #   #     node: [22.x]

  #   steps:
  #     - name: Checkout the code
  #       uses: actions/checkout@v4

  #     - name: 🏗 Setup Node
  #       uses: actions/setup-node@v4
  #       with:
  #         # node-version: ${{ matrix.node }}
  #         node-version: 22.x
  #         cache: yarn

  #     - name: 📦 Install dependencies
  #       run: yarn

  #     - name: Pre-Check Typescript, Lint And Prettier
  #       run: |
  #         yarn tsc
  #         yarn lint
  #         yarn pretty

  build:
    # needs: [pre-check]
    runs-on: ${{ github.event.inputs.os || 'ubuntu-latest' }}
    env:
      JAVA_TOOL_OPTIONS: "-Xmx4g" # Increase this to Xmx4g - 4GB, adjust as needed
    environment:
      name: app-${{ github.event.inputs.profile || 'development' }}
      url: ${{ steps.artifact-upload-step.outputs.artifact-url }}
    # strategy:
    #   matrix:
    #     node: [22.x]

    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: 🏗 Checkout the repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          # node-version: ${{ matrix.node }}
          node-version: 22.x
          cache: yarn

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          # java-version: "17"
          # distribution: "temurin"
          java-version: "17"
          distribution: "zulu" # See 'Supported distributions' for available options

      - name: Check Java version
        run: |
          java -version    
          java HelloWorldApp.java

      - name: Setup Android SDK Tool
        uses: android-actions/setup-android@v3

      - name: Clean Gradle Cache
        run: ./gradlew clean

      - name: Refresh dependencies
        run: ./gradlew --refresh-dependencies

      - name: 🏗 Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      # - name: 🧪 Expo Installed (Version Check)
      #   run: expo --version

      # - name: 🧪 Expo Authenticated (WhoAmI)
      #   if: ${{ env.hasAuth == 'true' }}
      #   run: expo whoami

      # - name: 🧪 EAS Installed (Version Check)
      #   run: eas --version

      # - name: 🧪 EAS Authenticated (WhoAmI)
      #   if: ${{ env.hasAuth == 'true' }}
      #   run: eas whoami

      - name: 📦 Install dependencies
        # run: yarn install --frozen-lockfile
        run: yarn

      - name: Get More Workflow Contect Variables
        run: echo "${{ toJson(github) }}"

      - name: 👷 Build App
        run: eas build --platform=${{ github.event.inputs.platform || 'android' }} --profile=${{ github.event.inputs.profile || 'development' }} --local --non-interactive --clear-cache --output=${{ github.workspace }}/app-release.apk
        # run: eas build --platform=${{ github.event.inputs.platform || 'android' }} --profile=${{ github.event.inputs.profile || 'development' }} --local --non-interactive --clear-cache --output=./app-build

      - name: Upload A Build APK Artifact
        uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: ${{ env.BUILD_ARTIFACT_NAME }}
          retention-days: 14
          path: ${{ github.workspace }}/app-release.apk

      # - name: Output artifact ID
      #   run: echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-url }}'

      - name: Store APK Download URL In ENV Variable
        run: |
          echo "APK_URL=${{ steps.artifact-upload-step.outputs.artifact-url }}" >> $GITHUB_ENV

      - name: Send mail
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          # username: timsina.regan
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
          to: timsina.regan@gmail.com
          from: Developer
          body: ${{ github.job }} job in workflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }} APK URL -> ${{ steps.artifact-upload-step.outputs.artifact-url }}
          ignore_cert: true
          convert_markdown: true
          attachments: attachments.zip,git.diff,./dist/static/*.js
          priority: low

      - name: 🚢 Submit
        if: ${{ github.event.inputs.should_submit }}
        run: eas submit -p ${{ github.event.inputs.platform || 'android' }} --profile ${{ github.event.inputs.profile || 'preview' }} --path app-build
